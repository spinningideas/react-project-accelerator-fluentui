{"version":3,"sources":["components/Shared/Card/Card.js","components/Shared/Card/CardItem.js","components/Shared/Notifications.js","services/HttpClient.js","services/GeoService.js","components/Shared/Modal.js","components/Home/GetStartedMessage.js","pages/Home.js"],"names":["Card","props","style","border","background","padding","children","CardItem","NotificationItem","React","createElement","className","theme","onClick","hideNotification","id","title","msg","Notifications","show","type","addNotification","success","duration","error","info","n","state","notifications","newNotificationKey","currentNotificationKey","setState","hideAfterDurationElapses","key","setTimeout","topStyle","window","pageYOffset","hide","this","el","map","notification","top","Component","HttpClient","fetchResponseHandler","response","ok","json","then","Promise","resolve","data","code","status","catch","err","statusText","message","getDataAuthenticated","url","token","a","fetch","method","headers","Accept","Authorization","getData","postData","postHeaders","length","body","JSON","stringify","GeoService","getCurrentIPAddress","client","ip","city","region_name","Modal","isOpen","modalStyle","position","left","transform","zIndex","width","height","marginLeft","marginTop","backdropStyle","containerClassName","noBackdrop","backdropClassName","e","preventDefault","onClose","close","GetStartedMessage","displayGetStarted","locData","getstartedmessage","withRouter","useState","userSignedIn","setUserSignedIn","setLocData","modalDemoState","setModalDemoState","userIpAddressState","setUserIpAddressState","isLoadingState","setIsLoadingState","authService","AuthService","localizationService","LocalizationService","navigationService","NavigationService","geoService","notificationsRef","useRef","useEffect","userHasSignedIn","locCode","getUserLocale","getLocalizedTextSet","locDataLoaded","loadLocalization","showNotification","current","showIpAddressUsingHttpClient","IpAddressDisplay","LoadingIndicator","display","size","Stack","spacing","Item","xs","homepagewelcome","authenticatedcontent","authenticatedcontentdescription","md","lg","xl","notificationsdescription","DefaultButton","color","modals","modalsdescription","PrimaryButton","view","welcome","formsexampledescription","navigate","formsexample","serviceexampledescription","serviceexampletitle","ref"],"mappings":"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","file":"static/js/5.09175961.chunk.js","sourcesContent":["import React from 'react';\r\n/* \r\nExample Usage:\r\n\t<Card>\r\n\t</Card>\r\n*/\r\n\r\nfunction Card(props) {\r\n  let cardStyle = {\r\n    border: '1px solid #eeeeee',\r\n    background: '#ffffff',\r\n    padding: '10px'\r\n  };\r\n\r\n  return <div style={cardStyle}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n/* \r\nExample Usage:\r\n\t<Card>\r\n\t\t<CardItem>\r\n\t\t</CardItem>\r\n\t</Card>\r\n*/\r\n\r\nfunction CardItem(props) {\r\n  let cardItemStyle = {\r\n    background: '#ffffff',\r\n    padding: '10px'\r\n  };\r\n\r\n  return <div style={cardItemStyle}>{props.children}</div>;\r\n}\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\n\r\nlet defaultDurationMilliseconds = 5000; // ms\r\n/* React \"Toast\" Component which encapsulates a given popup style UI message - re-factored from https://github.com/k4wo/react-notify */\r\nfunction NotificationItem(props) {\r\n  const hideNotification = () => {\r\n    props.hideNotification(props.id);\r\n  };\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { className: 'notification-item ' + props.theme, onClick: hideNotification },\r\n    React.createElement('p', { className: 'notification-title' }, props.title),\r\n    React.createElement('p', { className: 'notification-body' }, props.msg)\r\n  );\r\n}\r\n\r\n/* Notifications container - encapsulates collection of \"Toast\" style messages of various types (eg success, warning, error) */\r\n// NOTE: Cannot use stateless function here as a backing instance is required.\r\n// See https://reactjs.org/docs/components-and-props.html#stateless-functions\r\n// TODO: see if there is a way to convert this into functional component\r\n// to remove this and adhere to guidance on strong preference for functional components\r\nclass Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentNotificationKey: 0, notifications: [] };\r\n  }\r\n\r\n  show = (msg, type) => {\r\n    this.addNotification('', msg, defaultDurationMilliseconds, type);\r\n  };\r\n\r\n  success = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'success');\r\n  };\r\n\r\n  error = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'error');\r\n  };\r\n\r\n  info = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'info');\r\n  };\r\n\r\n  addNotification = (title, msg, duration, type) => {\r\n    var n = this.state.notifications;\r\n    var newNotificationKey = this.state.currentNotificationKey;\r\n    newNotificationKey = newNotificationKey++;\r\n    n[newNotificationKey] = { title: title, msg: msg, duration: duration, theme: type };\r\n    this.setState({ currentNotificationKey: newNotificationKey, notifications: n });\r\n    this.hideAfterDurationElapses(duration, newNotificationKey);\r\n  };\r\n\r\n  hideAfterDurationElapses = (duration, key) => {\r\n    setTimeout(() => {\r\n      this.hideNotification(key);\r\n    }, duration);\r\n  };\r\n\r\n  hideNotification = (key) => {\r\n    var n = this.state.notifications;\r\n    delete n[key];\r\n    this.setState({ notifications: n });\r\n  };\r\n\r\n  render() {\r\n    var topStyle = window.pageYOffset + 'px';\r\n    var hide = this.hideNotification;\r\n    var el = this.state.notifications.map((notification, key) => {\r\n      return React.createElement(NotificationItem, {\r\n        id: key,\r\n        key: key,\r\n        theme: notification.theme,\r\n        hideNotification: hide,\r\n        title: notification.title,\r\n        msg: notification.msg\r\n      });\r\n    });\r\n    return React.createElement('div', { style: { top: topStyle }, className: 'notification-container' }, el);\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n\tEncapsulates all outbound http communication from the application to get/set data\r\n\tand forms\tthe basic building block and adaptor for http requests made by the application.\r\n\tAlso provides way to set auth headers needed by some requests\r\n*/\r\nconst HttpClient = () => {\r\n  const fetchResponseHandler = (response) => {\r\n    // Wraps fetch response and traps most errors and returns raw response as well.\r\n    // Ensures consisten response in form of:\r\n    // {data: [PAYLOADRETURNED_MAY_BE_JSON], code: response.status, response: response }\r\n    if (response.ok) {\r\n      return response\r\n        .json()\r\n        .then((json) => {\r\n          // the status was ok and there is a json body\r\n          return Promise.resolve({ data: json, code: response.status, response: response });\r\n        })\r\n        .catch((err) => {\r\n          // the status was ok but there is no json body\r\n          return Promise.resolve({ data: response, code: response.status, response: response });\r\n        });\r\n    } else {\r\n      return response\r\n        .json()\r\n        .catch((err) => {\r\n          // the status was not ok and there is no json body\r\n          return Promise.resolve({ data: response.statusText, code: response.status, response: response });\r\n        })\r\n        .then((json) => {\r\n          // the status was not ok but there is a json body\r\n          return Promise.resolve({ data: json.error.message, code: response.status, response: response });\r\n        });\r\n    }\r\n  };\r\n\r\n  // Modern fetch based methods to put into full use\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n  const getDataAuthenticated = async (url, token) => {\r\n    return await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  const getData = async (url) => {\r\n    return await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json'\r\n      }\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  const postData = async (url, data = {}, token) => {\r\n    let postHeaders = {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    };\r\n    if (token && token.length) {\r\n      postHeaders['Authorization'] = 'Bearer ' + token;\r\n    }\r\n    return await fetch(url, {\r\n      method: 'POST',\r\n      headers: postHeaders,\r\n      body: JSON.stringify(data)\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  return {\r\n    getData,\r\n    getDataAuthenticated,\r\n    postData\r\n  };\r\n};\r\n\r\nexport default HttpClient;\r\n","import HttpClient from 'services/HttpClient';\r\n\r\nconst GeoService = () => {\r\n  const getCurrentIPAddress = async () => {\r\n    const client = HttpClient();\r\n    let url = `https://freegeoip.app/json/`;\r\n    return await client.getData(url).then((response) => {\r\n      return {\r\n        ip: response.data.ip,\r\n        message: `Your ip is ${response.data.ip} and your location: ${response.data.city}, ${response.data.region_name} `\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    getCurrentIPAddress\r\n  };\r\n};\r\n\r\nexport default GeoService;\r\n","import React from 'react';\r\n/* \r\nExample Usage:\r\n\r\n\t<button onClick={() => openModal()}>Open modal</button>\r\n\t<Modal isOpen={isModalOpen} onClose={() => closeModal()}>\r\n\t\t<h1>Modal title</h1>\r\n\t\t<p>hello</p>\r\n\t\t<p><button onClick={() => closeModal()}>Close</button></p>\r\n\t</Modal>\r\n*/\r\n\r\nfunction Modal(props) {\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    if (props.onClose) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  if (props.isOpen === false) return null;\r\n\r\n  let modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '9999',\r\n    background: '#ffffff',\r\n    padding: '10px'\r\n  };\r\n\r\n  if (props.width && props.height) {\r\n    modalStyle.width = props.width + 'px';\r\n    modalStyle.height = props.height + 'px';\r\n    modalStyle.marginLeft = '-' + props.width / 2 + 'px';\r\n    modalStyle.marginTop = '-' + props.height / 2 + 'px';\r\n    modalStyle.transform = null;\r\n  }\r\n\r\n  if (props.style) {\r\n    for (let key in props.style) {\r\n      modalStyle[key] = props.style[key];\r\n    }\r\n  }\r\n\r\n  let backdropStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: '0px',\r\n    left: '0px',\r\n    zIndex: '9998',\r\n    background: 'rgba(0, 0, 0, 0.3)'\r\n  };\r\n\r\n  if (props.backdropStyle) {\r\n    for (let key in props.backdropStyle) {\r\n      backdropStyle[key] = props.backdropStyle[key];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={props.containerClassName}>\r\n      <div className={props.className} style={modalStyle}>\r\n        {props.children}\r\n      </div>\r\n      {!props.noBackdrop && (\r\n        <div\r\n          className={props.backdropClassName}\r\n          style={backdropStyle}\r\n          onClick={(e) => {\r\n            close(e);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nfunction GetStartedMessage(props) {\r\n  if (props.displayGetStarted === false) {\r\n    return <></>;\r\n  }\r\n  return <p className=\"whitetext\">{props.locData.getstartedmessage}</p>;\r\n}\r\n\r\nexport default GetStartedMessage;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// UI Kit\r\nimport { DefaultButton, PrimaryButton } from '@fluentui/react/lib';\r\nimport { Stack } from '@fluentui/react/lib/Stack';\r\n// services\r\nimport AuthService from 'services/AuthService';\r\nimport LocalizationService from 'services/LocalizationService';\r\nimport NavigationService from 'services/NavigationService';\r\nimport GeoService from 'services/GeoService';\r\n// components - shared\r\nimport Card from 'components/Shared/Card/Card';\r\nimport CardItem from 'components/Shared/Card/CardItem';\r\nimport Modal from 'components/Shared/Modal';\r\nimport Notifications from 'components/Shared/Notifications';\r\nimport LoadingIndicator from 'components/Shared/LoadingIndicator';\r\n// components - page\r\nimport GetStartedMessage from 'components/Home/GetStartedMessage';\r\n\r\nfunction Home(props) {\r\n  const [userSignedIn, setUserSignedIn] = useState(false);\r\n  const [locData, setLocData] = useState({});\r\n  const [modalDemoState, setModalDemoState] = useState(false);\r\n  const [userIpAddressState, setUserIpAddressState] = useState('');\r\n  const [isLoadingState, setIsLoadingState] = useState(false);\r\n\r\n  const authService = AuthService();\r\n  const localizationService = LocalizationService();\r\n  const navigationService = NavigationService();\r\n  const geoService = GeoService();\r\n\r\n  const notificationsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let userHasSignedIn = authService.userHasSignedIn();\r\n    setUserSignedIn(userHasSignedIn);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function loadLocalization() {\r\n      const locCode = localizationService.getUserLocale();\r\n      const locDataLoaded = await localizationService.getLocalizedTextSet(\r\n        [\r\n          'welcome',\r\n          'homepagewelcome',\r\n          'getstartedmessage',\r\n          'notifications',\r\n          'notificationsdescription',\r\n          'modals',\r\n          'modalsdescription',\r\n          'error',\r\n          'success',\r\n          'view',\r\n          'close',\r\n          'authenticatedcontent',\r\n          'authenticatedcontentdescription',\r\n          'serviceexampletitle',\r\n          'serviceexampledescription',\r\n          'formsexample',\r\n          'formsexampledescription'\r\n        ],\r\n        locCode\r\n      );\r\n      setLocData(locDataLoaded);\r\n    }\r\n    loadLocalization();\r\n  }, []);\r\n\r\n  const showNotification = (message, type) => {\r\n    notificationsRef.current.show(message, type);\r\n  };\r\n\r\n  const navigateToContact = () => {\r\n    navigationService.navigate(props, '/contact');\r\n  };\r\n\r\n  const showIpAddressUsingHttpClient = async () => {\r\n    setUserIpAddressState('');\r\n    setIsLoadingState(true);\r\n    await geoService.getCurrentIPAddress().then((response) => {\r\n      if (response) {\r\n        setUserIpAddressState(response.message);\r\n        setIsLoadingState(false);\r\n      } else {\r\n        setUserIpAddressState('Error occurred');\r\n        setIsLoadingState(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const IpAddressDisplay = () => {\r\n    if (!isLoadingState && userIpAddressState.length > 0) {\r\n      return <p className=\"mt-2\">{userIpAddressState}</p>;\r\n    } else {\r\n      return <LoadingIndicator display={isLoadingState} size={20} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={0}>\r\n      <Stack.Item xs={12} className=\"contentpanel-site\">\r\n        <Card>\r\n          <CardItem>\r\n            <h2>{locData.homepagewelcome}</h2>\r\n            <GetStartedMessage locData={locData} displayGetStarted={true} />\r\n          </CardItem>\r\n        </Card>\r\n        <Stack spacing={0}>\r\n          <Stack.Item xs={12} className=\"pt-1\">\r\n            {userSignedIn && (\r\n              <Stack>\r\n                <Stack.Item xs={12} className=\"pt-1\">\r\n                  <Card>\r\n                    <CardItem>\r\n                      <h4 className=\"card-title\">{locData.authenticatedcontent}</h4>\r\n                      <p>{locData.authenticatedcontentdescription}</p>\r\n                    </CardItem>\r\n                  </Card>\r\n                </Stack.Item>\r\n              </Stack>\r\n            )}\r\n\r\n            <Stack>\r\n              <Stack.Item xs={12} md={4} lg={4} xl={4} className=\"pt-1\">\r\n                <Card>\r\n                  <CardItem>\r\n                    <h4 className=\"card-title\">{locData.notifications}</h4>\r\n                    <p>{locData.notificationsdescription}</p>\r\n                  </CardItem>\r\n                  <CardItem>\r\n                    <DefaultButton\r\n                      className=\"ml-2\"\r\n                      color=\"secondary\"\r\n                      onClick={() => showNotification(locData.success, 'success')}\r\n                    >\r\n                      {locData.success}\r\n                    </DefaultButton>\r\n                    <DefaultButton\r\n                      className=\"ml-2\"\r\n                      color=\"secondary\"\r\n                      onClick={() => showNotification(locData.error, 'error')}\r\n                    >\r\n                      {locData.error}\r\n                    </DefaultButton>\r\n                  </CardItem>\r\n                </Card>\r\n              </Stack.Item>\r\n            </Stack>\r\n\r\n            <Stack>\r\n              <Stack.Item xs={12} md={4} lg={4} xl={4} className=\"pt-1\">\r\n                <Card>\r\n                  <CardItem>\r\n                    <h4 className=\"card-title\">{locData.modals}</h4>\r\n                    <p>{locData.modalsdescription}</p>\r\n                  </CardItem>\r\n                  <CardItem>\r\n                    <PrimaryButton className=\"ml-2\" color=\"secondary\" onClick={() => setModalDemoState(true)}>\r\n                      {locData.view}\r\n                    </PrimaryButton>\r\n                  </CardItem>\r\n                </Card>\r\n\r\n                <Modal isOpen={modalDemoState} onClose={() => setModalDemoState(false)}>\r\n                  <h1>{locData.welcome}</h1>\r\n                  <p>{locData.homepagewelcome}</p>\r\n                  <PrimaryButton color=\"secondary\" onClick={() => setModalDemoState(false)}>\r\n                    {locData.close}\r\n                  </PrimaryButton>\r\n                </Modal>\r\n              </Stack.Item>\r\n            </Stack>\r\n\r\n            <Stack>\r\n              <Stack.Item xs={12} className=\"pt-1\">\r\n                <Card>\r\n                  <CardItem>\r\n                    <h4 className=\"card-title\">{locData.formsexampledescription}</h4>\r\n                    <PrimaryButton className=\"mt-3\" onClick={() => navigateToContact()}>\r\n                      {locData.formsexample}\r\n                    </PrimaryButton>\r\n                  </CardItem>\r\n                </Card>\r\n              </Stack.Item>\r\n            </Stack>\r\n\r\n            <Stack>\r\n              <Stack.Item xs={12} className=\"pt-1\">\r\n                <Card>\r\n                  <CardItem>\r\n                    <h4 className=\"card-title\">{locData.serviceexampledescription}</h4>\r\n                    <PrimaryButton className=\"mt-3\" color=\"secondary\" onClick={showIpAddressUsingHttpClient}>\r\n                      {locData.serviceexampletitle}\r\n                    </PrimaryButton>\r\n                    <IpAddressDisplay />\r\n                  </CardItem>\r\n                </Card>\r\n              </Stack.Item>\r\n            </Stack>\r\n          </Stack.Item>\r\n        </Stack>\r\n      </Stack.Item>\r\n      <Notifications ref={notificationsRef} />\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default withRouter(Home);\r\n"],"sourceRoot":""}
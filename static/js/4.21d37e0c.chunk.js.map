{"version":3,"sources":["components/Shared/Card/Card.js","components/Shared/Card/CardItem.js","components/Shared/Notifications.js","pages/Contact.js"],"names":["Card","props","style","border","background","padding","children","CardItem","NotificationItem","React","createElement","className","theme","onClick","hideNotification","id","title","msg","Notifications","show","type","addNotification","success","duration","error","info","n","state","notifications","newNotificationKey","currentNotificationKey","setState","hideAfterDurationElapses","key","setTimeout","topStyle","window","pageYOffset","hide","this","el","map","notification","top","Component","withRouter","useState","locData","setLocData","formIsSubmitting","setFormIsSubmitting","name","email","message","highpriority","formData","setFormData","localizationService","LocalizationService","notificationsRef","useRef","useEffect","a","locCode","getUserLocale","getLocalizedTextSet","locDataLoaded","loadLocalization","ContactForm","initialValues","validate","values","errors","required","test","onSubmit","current","submitForm","component","FormikTextField","label","render","fieldProps","contactoptionhighprioritytext","defaultChecked","disabled","save","spacing","Item","xs","contact","contactdescription","ref"],"mappings":"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","file":"static/js/4.21d37e0c.chunk.js","sourcesContent":["import React from 'react';\r\n/* \r\nExample Usage:\r\n\t<Card>\r\n\t</Card>\r\n*/\r\n\r\nfunction Card(props) {\r\n  let cardStyle = {\r\n    border: '1px solid #eeeeee',\r\n    background: '#ffffff',\r\n    padding: '10px'\r\n  };\r\n\r\n  return <div style={cardStyle}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n/* \r\nExample Usage:\r\n\t<Card>\r\n\t\t<CardItem>\r\n\t\t</CardItem>\r\n\t</Card>\r\n*/\r\n\r\nfunction CardItem(props) {\r\n  let cardItemStyle = {\r\n    background: '#ffffff',\r\n    padding: '10px'\r\n  };\r\n\r\n  return <div style={cardItemStyle}>{props.children}</div>;\r\n}\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\n\r\nlet defaultDurationMilliseconds = 5000; // ms\r\n/* React \"Toast\" Component which encapsulates a given popup style UI message - re-factored from https://github.com/k4wo/react-notify */\r\nfunction NotificationItem(props) {\r\n  const hideNotification = () => {\r\n    props.hideNotification(props.id);\r\n  };\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { className: 'notification-item ' + props.theme, onClick: hideNotification },\r\n    React.createElement('p', { className: 'notification-title' }, props.title),\r\n    React.createElement('p', { className: 'notification-body' }, props.msg)\r\n  );\r\n}\r\n\r\n/* Notifications container - encapsulates collection of \"Toast\" style messages of various types (eg success, warning, error) */\r\n// NOTE: Cannot use stateless function here as a backing instance is required.\r\n// See https://reactjs.org/docs/components-and-props.html#stateless-functions\r\n// TODO: see if there is a way to convert this into functional component\r\n// to remove this and adhere to guidance on strong preference for functional components\r\nclass Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentNotificationKey: 0, notifications: [] };\r\n  }\r\n\r\n  show = (msg, type) => {\r\n    this.addNotification('', msg, defaultDurationMilliseconds, type);\r\n  };\r\n\r\n  success = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'success');\r\n  };\r\n\r\n  error = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'error');\r\n  };\r\n\r\n  info = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'info');\r\n  };\r\n\r\n  addNotification = (title, msg, duration, type) => {\r\n    var n = this.state.notifications;\r\n    var newNotificationKey = this.state.currentNotificationKey;\r\n    newNotificationKey = newNotificationKey++;\r\n    n[newNotificationKey] = { title: title, msg: msg, duration: duration, theme: type };\r\n    this.setState({ currentNotificationKey: newNotificationKey, notifications: n });\r\n    this.hideAfterDurationElapses(duration, newNotificationKey);\r\n  };\r\n\r\n  hideAfterDurationElapses = (duration, key) => {\r\n    setTimeout(() => {\r\n      this.hideNotification(key);\r\n    }, duration);\r\n  };\r\n\r\n  hideNotification = (key) => {\r\n    var n = this.state.notifications;\r\n    delete n[key];\r\n    this.setState({ notifications: n });\r\n  };\r\n\r\n  render() {\r\n    var topStyle = window.pageYOffset + 'px';\r\n    var hide = this.hideNotification;\r\n    var el = this.state.notifications.map((notification, key) => {\r\n      return React.createElement(NotificationItem, {\r\n        id: key,\r\n        key: key,\r\n        theme: notification.theme,\r\n        hideNotification: hide,\r\n        title: notification.title,\r\n        msg: notification.msg\r\n      });\r\n    });\r\n    return React.createElement('div', { style: { top: topStyle }, className: 'notification-container' }, el);\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","import React, { useEffect, useState, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\n// UI Kit\nimport { Stack, PrimaryButton, Checkbox } from '@fluentui/react/lib';\n// forms\nimport { Formik, Form, Field } from 'formik';\nimport { FormikTextField } from 'formik-office-ui-fabric-react';\n\n// components\nimport Card from 'components/Shared/Card/Card';\nimport CardItem from 'components/Shared/Card/CardItem';\nimport Notifications from 'components/Shared/Notifications';\n// Services\nimport LocalizationService from 'services/LocalizationService';\n\nfunction Contact() {\n  const [locData, setLocData] = useState({});\n  const [formIsSubmitting, setFormIsSubmitting] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n    highpriority: false\n  });\n\n  const localizationService = LocalizationService();\n\n  const notificationsRef = useRef(null);\n\n  useEffect(() => {\n    async function loadLocalization() {\n      const locCode = localizationService.getUserLocale();\n      const locDataLoaded = await localizationService.getLocalizedTextSet(\n        [\n          'contact',\n          'contactdescription',\n          'contactoptionhighprioritytext',\n          'moreinfo',\n          'save',\n          'name',\n          'email',\n          'message',\n          'messagedescription',\n          'required',\n          'success'\n        ],\n        locCode\n      );\n      setLocData(locDataLoaded);\n    }\n    loadLocalization();\n  }, []);\n\n  const showNotification = (message, type) => {\n    notificationsRef.current.show(message, type);\n  };\n\n  const ContactForm = () => (\n    <Formik\n      initialValues={formData}\n      validate={(values) => {\n        let errors = {};\n        if (!values.name) {\n          errors.name = locData.required;\n        }\n        if (!values.email) {\n          errors.email = locData.required;\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n        if (!values.message) {\n          errors.message = locData.required;\n        }\n        return errors;\n      }}\n      onSubmit={(values) => {\n        setFormIsSubmitting(false);\n        showNotification(locData.success, 'success');\n        setFormData({\n          name: values.name,\n          email: values.email,\n          message: values.message,\n          highpriority: values.highpriority\n        });\n      }}\n    >\n      {({ submitForm }) => (\n        <Form>\n          <Card>\n            <CardItem>\n              <Field name=\"name\" component={FormikTextField} label={locData.name} required />\n            </CardItem>\n            <CardItem>\n              <Field name=\"email\" component={FormikTextField} label={locData.email} required />\n            </CardItem>\n            <CardItem>\n              <Field name=\"message\" required label={locData.message} component={FormikTextField} />\n            </CardItem>\n            <CardItem>\n              <Field\n                name=\"highpriority\"\n                required\n                render={(fieldProps) => <Checkbox label={locData.contactoptionhighprioritytext} defaultChecked />}\n              />\n            </CardItem>\n            <CardItem>\n              <PrimaryButton className=\"ml-2\" disabled={formIsSubmitting} onClick={submitForm}>\n                {locData.save}\n              </PrimaryButton>\n            </CardItem>\n          </Card>\n        </Form>\n      )}\n    </Formik>\n  );\n\n  return (\n    <Stack spacing={0}>\n      <Stack.Item xs={12}>\n        <Card>\n          <CardItem>\n            <h3>{locData.contact}</h3>\n            <p>{locData.contactdescription}</p>\n          </CardItem>\n        </Card>\n        <Stack spacing={0}>\n          <Stack.Item xs={12}>\n            <ContactForm />\n          </Stack.Item>\n        </Stack>\n      </Stack.Item>\n      <Notifications ref={notificationsRef} />\n    </Stack>\n  );\n}\n\nexport default withRouter(Contact);\n"],"sourceRoot":""}
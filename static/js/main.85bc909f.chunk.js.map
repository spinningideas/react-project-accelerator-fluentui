{"version":3,"sources":["components/LoadingIndicator.js","routes.js","components/Application/SignInDialog.js","components/Application/Navigation.js","Application.js","components/ErrorHandler.js","index.js","services/LocalizationService.js","services/AuthService.js","services/NavigationService.js"],"names":["LoadingIndicator","props","undefined","display","Spinner","size","SpinnerSize","large","routes","path","exact","component","Loadable","loader","loading","to","SignInDialog","dialogContentProps","type","DialogType","normal","title","locData","sign","closeButtonAriaLabel","cancel","subText","signindescription","Dialog","open","content","DialogFooter","DefaultButton","onClick","handleSignInCancel","PrimaryButton","handleSignIn","color","autoFocus","signin","withRouter","useState","openNavigation","setOpenNavigation","setLocData","selectedLocCode","setSelectedLocCode","signInDialogOpen","setSignInDialogOpen","localizationService","LocalizationService","navigationService","NavigationService","useEffect","a","locCode","getUserLocale","getLocalizedTextSet","locDataLoaded","loadLocalization","handleSignOutClick","handleSignOut","navMenuItems","key","text","home","iconProps","iconName","navigate","contact","about","route","NavMenu","map","item","Stack","Item","CommandBarButton","className","position","IconButton","aria-label","FontIcon","Text","variant","Dropdown","id","selectedKey","options","onChange","locale","setUserLocale","window","location","reload","userSignedIn","signout","Panel","isLightDismiss","isOpen","onDismiss","setUserSignedIn","authService","AuthService","refLocation","useRef","userHasSignedIn","current","pathname","scrollTo","signIn","signOut","ErrorHandler","state","hasError","error","info","console","log","this","children","React","Component","loadTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","initializeIcons","routerHistory","createBrowserHistory","AppShell","history","basename","ReactDOM","render","document","getElementById","supportedLanguageMap","enUS","zhCN","esES","localStorage","getItem","keys","textSet","getLocalizedData","localizedData","localizedTextSet","keysLocalizedTextSet","Object","desiredKey","localeCode","localizedDataFilePath","process","fetch","then","response","json","catch","err","msg","loc","setItem","getLocales","getCurrentLocale","found","navigator","languages","i","length","push","userLanguage","language","setUserHasSignedIn","signedInVal","Boolean","params","replace","navigateToUrl","url","w","body","clientWidth","h","clientHeight","focus"],"mappings":"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","file":"static/js/main.85bc909f.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner, SpinnerSize } from '@fluentui/react/lib';\n\nexport default function LoadingIndicator(props) {\n  if (props.display === undefined || props.display === false) {\n    return <></>;\n  }\n  return <Spinner size={SpinnerSize.large} />;\n}\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport LoadingIndicator from 'components/LoadingIndicator';\r\n\r\nconst routes = (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Loadable({ loader: () => import('./pages/Home'), loading: LoadingIndicator })} />\r\n    <Route path=\"/about\" component={Loadable({ loader: () => import('./pages/About'), loading: LoadingIndicator })} />\r\n    <Route\r\n      path=\"/contact\"\r\n      component={Loadable({ loader: () => import('./pages/Contact'), loading: LoadingIndicator })}\r\n    />\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n);\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { PrimaryButton, DefaultButton, Dialog, DialogType, DialogFooter } from '@fluentui/react/lib';\r\n\r\nfunction SignInDialog(props) {\r\n  const dialogContentProps = {\r\n    type: DialogType.normal,\r\n    title: props.locData.sign,\r\n    closeButtonAriaLabel: props.locData.cancel,\r\n    subText: props.locData.signindescription\r\n  };\r\n\r\n  const handleCancelClose = () => {\r\n    props.handleSignInCancel(false);\r\n  };\r\n\r\n  const handleSignInClose = () => {\r\n    props.handleSignIn();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} dialogContentProps={dialogContentProps}>\r\n        {props.content}\r\n        <DialogFooter>\r\n          <DefaultButton onClick={() => handleCancelClose(false)}>{props.locData.cancel}</DefaultButton>\r\n          <PrimaryButton onClick={() => handleSignInClose(true)} color=\"secondary\" autoFocus>\r\n            {props.locData.signin}\r\n          </PrimaryButton>\r\n        </DialogFooter>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInDialog;\r\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n// UI Kit Components\nimport {\n  DefaultButton,\n  IconButton,\n  CommandBarButton,\n  Stack,\n  Dropdown,\n  Panel,\n  FontIcon,\n  Text\n} from '@fluentui/react/lib';\n\n// Services\nimport LocalizationService from 'services/LocalizationService';\nimport NavigationService from 'services/NavigationService';\n// Components\nimport SignInDialog from 'components/Application/SignInDialog';\n\n/* \nTODO: pull in or implement navbar? https://github.com/microsoft/fluentui/issues/13409\n*/\n\nfunction Navigation(props) {\n  const [openNavigation, setOpenNavigation] = useState(false);\n  const [locData, setLocData] = useState({});\n  const [selectedLocCode, setSelectedLocCode] = useState('');\n  const [signInDialogOpen, setSignInDialogOpen] = useState(false);\n\n  const localizationService = LocalizationService();\n  const navigationService = NavigationService();\n\n  useEffect(() => {\n    async function loadLocalization() {\n      const locCode = localizationService.getUserLocale();\n      setSelectedLocCode(locCode);\n      const locDataLoaded = await localizationService.getLocalizedTextSet(\n        ['apptitle', 'signin', 'signindescription', 'signout', 'home', 'contact', 'about', 'cancel'],\n        locCode\n      );\n\n      setLocData(locDataLoaded);\n    }\n    loadLocalization();\n  }, []);\n\n  const toggleDrawerOpen = () => {\n    setOpenNavigation(!openNavigation);\n  };\n\n  const closeDrawer = () => {\n    setOpenNavigation(false);\n  };\n\n  const languageOptions = [\n    { key: 'enUS', text: 'English' },\n    { key: 'zhCN', text: 'Chinese' },\n    { key: 'esES', text: 'Spanish' }\n  ];\n\n  const languageSelectionMakeChoice = (locale) => {\n    localizationService.setUserLocale(locale);\n    window.location.reload();\n  };\n\n  const handleSignInClick = () => {\n    setSignInDialogOpen(false);\n    props.handleSignIn();\n  };\n\n  const handleSignOutClick = () => {\n    props.handleSignOut();\n  };\n\n  const appTitle = () => {\n    //if (isWidthUp('sm', props.width)) {\n    //  return <>{locData.apptitle}</>;\n    //}\n    return <>RPA</>;\n  };\n\n  const navMenuItems = [\n    {\n      key: 'home',\n      text: locData.home,\n      iconProps: { iconName: 'Home' },\n      onClick: () => navigate('/')\n    },\n    {\n      key: 'contact',\n      text: locData.contact,\n      iconProps: { iconName: 'ArrangeByFrom' },\n      onClick: () => navigate('/contact')\n    },\n    {\n      key: 'about',\n      text: locData.about,\n      iconProps: { iconName: 'Help' },\n      onClick: () => navigate('/about')\n    }\n  ];\n\n  const navigate = (route) => {\n    setOpenNavigation(false);\n    navigationService.navigate(props, route, null);\n  };\n\n  const NavMenu = () => {\n    const items = navMenuItems.map((item) => (\n      <Stack.Item key={item.key}>\n        <CommandBarButton\n          className=\"p-2 m-2 full-width text-left\"\n          iconProps={item.iconProps}\n          text={item.text}\n          onClick={item.onClick}\n        />\n      </Stack.Item>\n    ));\n    return items;\n  };\n\n  return (\n    <div>\n      <Stack position=\"static\">\n        <Stack.Item>\n          <IconButton onClick={() => toggleDrawerOpen()} color=\"inherit\" aria-label=\"menu\">\n            <FontIcon iconName=\"GlobalNavButton\" />\n          </IconButton>\n          <Text variant=\"xLarge\">{appTitle()}</Text>\n          <Dropdown\n            id=\"language-menu\"\n            selectedKey={selectedLocCode ? selectedLocCode : undefined}\n            options={languageOptions}\n            onChange={languageSelectionMakeChoice}\n          ></Dropdown>\n          {props.userSignedIn && <DefaultButton onClick={() => handleSignOutClick}>{locData.signout}</DefaultButton>}\n          {!props.userSignedIn && (\n            <DefaultButton onClick={() => setSignInDialogOpen(true)}>{locData.signin}</DefaultButton>\n          )}\n        </Stack.Item>\n      </Stack>\n      <Panel isLightDismiss isOpen={openNavigation} onDismiss={closeDrawer}>\n        <Stack>\n          <NavMenu />\n        </Stack>\n      </Panel>\n      <SignInDialog\n        locData={locData}\n        open={signInDialogOpen}\n        handleSignIn={handleSignInClick}\n        handleSignInCancel={() => setSignInDialogOpen(false)}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(Navigation);\n","import React, { useEffect, useState, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Stack } from '@fluentui/react/lib/Stack';\n// Routes\nimport routes from 'routes';\n// Services\nimport AuthService from 'services/AuthService';\n// Components\nimport Navigation from 'components/Application/Navigation';\n\nfunction Application(props) {\n  const [userSignedIn, setUserSignedIn] = useState(false);\n  const authService = AuthService();\n  const refLocation = useRef(props.location);\n\n  useEffect(() => {\n    let userHasSignedIn = authService.userHasSignedIn();\n    setUserSignedIn(userHasSignedIn);\n  }, [userSignedIn]);\n\n  useEffect(() => {\n    // Route Change Detection\n    if (\n      refLocation &&\n      refLocation.current &&\n      props.location &&\n      props.location.pathname &&\n      refLocation.current !== props.location.pathname\n    ) {\n      refLocation.current = props.location.pathname;\n      // Can track page views here via TBD servvice: analyticsService.trackPageView(props.location.pathname);\n      window.scrollTo(0, 0);\n    }\n  }, [props.location.key]);\n\n  const handleSignIn = () => {\n    authService.signIn();\n    if (window && window.location) {\n      window.location.reload(true);\n    }\n  };\n\n  const handleSignOut = () => {\n    authService.signOut();\n    if (window && window.location) {\n      window.location.reload(true);\n    }\n  };\n\n  return (\n    <Stack>\n      <Stack.Item>\n        <Navigation userSignedIn={userSignedIn} handleSignIn={handleSignIn} handleSignOut={handleSignOut} />\n      </Stack.Item>\n      <Stack.Item>{routes}</Stack.Item>\n    </Stack>\n  );\n}\n\nexport default withRouter(Application);\n","import React from 'react';\r\nclass ErrorHandler extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error: error };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    console.log(error, info);\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h3>Something went wrong. Please reload the page to continue</h3>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorHandler;\r\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\n// Theme - fluent-ui\nimport { loadTheme } from '@fluentui/react';\nimport { initializeIcons } from '@uifabric/icons';\n\n// App\nimport 'styles/Application.css';\nimport Application from 'Application';\nimport ErrorHandler from 'components/ErrorHandler';\n\nloadTheme({\n  palette: {\n    themePrimary: '#0078d4',\n    themeLighterAlt: '#eff6fc',\n    themeLighter: '#deecf9',\n    themeLight: '#c7e0f4',\n    themeTertiary: '#71afe5',\n    themeSecondary: '#2b88d8',\n    themeDarkAlt: '#106ebe',\n    themeDark: '#005a9e',\n    themeDarker: '#004578',\n    neutralLighterAlt: '#f8f8f8',\n    neutralLighter: '#f4f4f4',\n    neutralLight: '#eaeaea',\n    neutralQuaternaryAlt: '#dadada',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c8c8',\n    neutralTertiary: '#c2c2c2',\n    neutralSecondary: '#858585',\n    neutralPrimaryAlt: '#4b4b4b',\n    neutralPrimary: '#333333',\n    neutralDark: '#272727',\n    black: '#1d1d1d',\n    white: '#ffffff'\n  }\n});\n\ninitializeIcons();\n\nconst routerHistory = createBrowserHistory();\n\nconst AppShell = () => (\n  <ErrorHandler>\n    <Router history={routerHistory} basename=\"react-project-accelerator-fluentui\">\n      <Application />\n    </Router>\n  </ErrorHandler>\n);\n\nReactDOM.render(<AppShell />, document.getElementById('appshell'));\n","const supportedLanguageMap = {\r\n  enUS: 'English',\r\n  zhCN: 'Chinese',\r\n  esES: 'Spanish'\r\n};\r\n\r\n// taken in parts from:\r\n// https://react.i18next.com/legacy-v9/step-by-step-guide\r\n// https://www.robinwieruch.de/react-internationalization\r\n\r\nconst LocalizationService = () => {\r\n  const defaultLocale = 'enUS';\r\n\r\n  const getLocales = () => {\r\n    return supportedLanguageMap;\r\n  };\r\n\r\n  const getUserLocale = () => {\r\n    let locale = window.localStorage.getItem('locale');\r\n    if (locale) {\r\n      return locale;\r\n    }\r\n    return defaultLocale;\r\n  };\r\n\r\n  const setUserLocale = (loc) => {\r\n    window.localStorage.setItem('locale', loc);\r\n  };\r\n\r\n  const getCurrentLocale = () => {\r\n    // TODO: lookup current user local via browser and return this\r\n    // https://github.com/i18next/i18next-browser-languageDetector/blob/master/src/browserLookups/navigator.js\r\n    // see also: https://github.com/i18next/i18next-browser-languageDetector/blob/master/src/browserLookups/querystring.js\r\n    // or https://github.com/i18next/i18next-browser-languageDetector/blob/master/src/browserLookups/path.js\r\n    let found = [];\r\n\r\n    if (typeof navigator !== 'undefined') {\r\n      if (navigator.languages) {\r\n        // chrome only; not an array, so can't use .push.apply instead of iterating\r\n        for (let i = 0; i < navigator.languages.length; i++) {\r\n          found.push(navigator.languages[i]);\r\n        }\r\n      }\r\n      if (navigator.userLanguage) {\r\n        found.push(navigator.userLanguage);\r\n      }\r\n      if (navigator.language) {\r\n        found.push(navigator.language);\r\n      }\r\n    }\r\n\r\n    if (found.length === 0) {\r\n      return getUserLocale();\r\n    }\r\n    return found[0];\r\n  };\r\n\r\n  const getLocalizedTextSet = async (keys, locale) => {\r\n    // TODO: async import the locale file for given locale\r\n    // and extract the set of localized text values for given keys\r\n    let textSet = {};\r\n    const localizedData = await getLocalizedData(locale);\r\n    if (localizedData) {\r\n      let localizedTextSet = localizedData;\r\n      const keysLocalizedTextSet = Object.keys(localizedTextSet);\r\n\r\n      for (const desiredKey of keys) {\r\n        for (const key of keysLocalizedTextSet) {\r\n          if (desiredKey === key) {\r\n            textSet[key] = localizedTextSet[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return textSet;\r\n  };\r\n\r\n  const getLocalizedData = async (localeCode) => {\r\n    const localizedDataFilePath = process.env.PUBLIC_URL + `/i18n/${localeCode}.json`;\r\n    // return await import(localizedDataFilePath);\r\n    // const localizedFile = await require(`${localizedDataFilePath}`);\r\n    // return localizedFile;\r\n    return fetch(localizedDataFilePath)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((err) => {\r\n        let msg = 'Error Reading data ' + err;\r\n        console.log(msg);\r\n      });\r\n  };\r\n\r\n  return {\r\n    setUserLocale,\r\n    getUserLocale,\r\n    getLocales,\r\n    getCurrentLocale,\r\n    getLocalizedTextSet\r\n  };\r\n};\r\n\r\nexport default LocalizationService;\r\n","const AuthService = () => {\r\n  const userHasSignedIn = () => {\r\n    let signedInVal = window.localStorage.getItem('usersignedin');\r\n    if (signedInVal) {\r\n      return signedInVal === 'true';\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const setUserHasSignedIn = (signedInVal) => {\r\n    window.localStorage.setItem('usersignedin', Boolean(signedInVal));\r\n  };\r\n\r\n  const signIn = () => {\r\n    setUserHasSignedIn(true);\r\n  };\r\n\r\n  const signOut = () => {\r\n    setUserHasSignedIn(false);\r\n  };\r\n\r\n  return {\r\n    userHasSignedIn,\r\n    setUserHasSignedIn,\r\n    signIn,\r\n    signOut\r\n  };\r\n};\r\n\r\nexport default AuthService;\r\n","const NavigationService = () => {\r\n  const navigate = (props, route, params) => {\r\n    if (props && props.history && props.history.replace) {\r\n      props.history.replace({\r\n        pathname: route,\r\n        state: params\r\n      });\r\n    }\r\n  };\r\n\r\n  const navigateToUrl = (url) => {\r\n    let w = document.body.clientWidth - 30,\r\n      h = document.body.clientHeight - 30;\r\n    let win = window.open(\r\n      url,\r\n      'contentwin',\r\n      'width=' + w + ',height=' + h + ',menubar=no,location=yes,resizable=yes,scrollbars=yes,status=yes'\r\n    );\r\n    win.focus();\r\n    return false;\r\n  };\r\n\r\n  return {\r\n    navigate,\r\n    navigateToUrl\r\n  };\r\n};\r\n\r\nexport default NavigationService;\r\n"],"sourceRoot":""}